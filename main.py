# –û—Å–Ω–æ–≤–Ω–æ–π —Ñ–∞–π–ª, –≥–¥–µ –±—É–¥–µ—Ç –ø—Ä–æ—Ö–æ–¥–∏—Ç—å –≥–ª–∞–≤–Ω—ã–π –ø–æ—Ç–æ–∫ –ø—Ä–æ–≥—Ä–∞–º–º—ã
from pathlib import Path

import telebot
from telebot import types
import database
import userInteraction
import base64

# –≤ —Ñ–∞–π–ª–µ database –±—É–¥—É—Ç —Ö—Ä–∞–Ω–∏—Ç—å—Å—è –≤—Å–µ –º–µ—Ç–æ–¥—ã –¥–ª—è –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è —Å –±–¥

token = '5270245996:AAEDYl1qVn02R-JFxF5HhrJ47RQwEItT3ww'
bot = telebot.TeleBot(token)

# –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
UserID = 0
UserName = ''
Age = 0
GenderID = 0
City = ''
MaleSearchID = 0
UserDescription = ''
PhotoCount = 0


@bot.message_handler(commands='start')
def start_message(message):
    global UserID
    UserID = message.from_user.id

    rmk = types.ReplyKeyboardMarkup()
    rmk.add(types.KeyboardButton('–û–ö'))

    bot.send_message(message.chat.id, '–ü—Ä–∏–≤–µ—Ç! –Ø –ø–æ–º–æ–≥—É –Ω–∞–π—Ç–∏'
                                      ' —Ç–µ–±–µ —á–µ–ª–æ–≤–µ–∫–∞ —Å –∫–æ—Ç–æ—Ä—ã–º '
                                      '—Ç—ã —Å–º–æ–∂–µ—à—å —Ö–æ—Ä–æ—à–æ –ø—Ä–æ–≤–µ—Å—Ç–∏ –≤—Ä–µ–º—è,'
                                      ' —Ç.–µ. –ø–æ–∫—É—à–∞—Ç—å, –Ω–æ –¥–ª—è –Ω–∞—á–∞–ª–∞'
                                      ' —Ä–∞—Å—Å–∫–∞–∂–∏ —á—É—Ç–∫–∞ –æ —Å–µ–±–µ,'
                                      ' —á—Ç–æ–±—ã —è –Ω–∞—à–µ–ª –ø–æ–¥—Ö–æ–¥—è—â–µ–≥–æ —á–µ–ª–æ–≤–µ–∫–∞...', reply_markup=rmk)

    bot.register_next_step_handler(message, welcome)


def welcome(message):
    rmk = types.ReplyKeyboardRemove()

    msg = bot.send_message(message.chat.id, '–ö–∞–∫ —Ç–µ–±—è –∑–æ–≤—É—Ç?', reply_markup=rmk)
    bot.register_next_step_handler(msg, get_Name)


def get_Name(message):
    global UserName
    UserName = message.text
    msg = bot.send_message(message.chat.id, '–ö—Ä—É—Ç–æ–µ –∏–º—è, –ø–µ—Ä–µ–π–¥–µ–º –¥–∞–ª—å—à–µ, —Å–∫–æ–ª—å–∫–æ —Ç–µ–±–µ –ª–µ—Ç?')
    bot.register_next_step_handler(msg, get_Age)


def get_Age(message):
    global Age
    while Age == 0:  # –ø—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –≤–æ–∑—Ä–∞—Å—Ç –∏–∑–º–µ–Ω–∏–ª—Å—è
        try:
            Age = int(message.text)  # –ø—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –≤–æ–∑—Ä–∞—Å—Ç –≤–≤–µ–¥–µ–Ω –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ
        except ValueError:
            bot.send_message(message.from_user.id, '–¶–∏—Ñ—Ä–∞–º–∏, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞')

    rmk = types.ReplyKeyboardMarkup()
    rmk.add(types.KeyboardButton('–ú—É–∂—Å–∫–æ–π'), types.KeyboardButton('–ñ–µ–Ω—Å–∫–∏–π'))

    msg = bot.send_message(message.chat.id, '–£–∫–∞–∂–∏ —Å–≤–æ–π –ø–æ–ª', reply_markup=rmk)
    bot.register_next_step_handler(msg, get_Gender)


def get_Gender(message):
    global GenderID
    while GenderID == 0:
        if message.text == '–ú—É–∂—Å–∫–æ–π':
            GenderID = 2
        elif message.text == '–ñ–µ–Ω—Å–∫–∏–π':
            GenderID = 1
        else:
            bot.send_message(message.from_user.id, '–ü–æ–ª –≤–≤–µ–¥–µ–Ω –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ')

    rmk = types.ReplyKeyboardMarkup()
    rmk.add(types.KeyboardButton('–ú—É–∂—á–∏–Ω'), types.KeyboardButton('–ñ–µ–Ω—â–∏–Ω'), types.KeyboardButton('–í—Å–µ—Ö'))

    msg = bot.send_message(message.chat.id, '–ö–æ–≥–æ –±—É–¥–µ–º –∏—Å–∫–∞—Ç—å?', reply_markup=rmk)
    bot.register_next_step_handler(msg, get_MaleSearch)


def get_MaleSearch(message):
    global MaleSearchID
    while MaleSearchID == 0:
        if message.text == '–ú—É–∂—á–∏–Ω':
            MaleSearchID = 2
        elif message.text == '–ñ–µ–Ω—â–∏–Ω':
            MaleSearchID = 1
        elif message.text == '–í—Å–µ—Ö':
            MaleSearchID = 3
        else:
            bot.send_message(message.from_user.id, '–í–≤–µ–¥–µ–Ω–æ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ')

    rmk = types.ReplyKeyboardRemove()

    msg = bot.send_message(message.chat.id, '–£–∫–∞–∂–∏—Ç–µ –≥–æ—Ä–æ–¥!', reply_markup=rmk)
    bot.register_next_step_handler(msg, get_City)


def get_City(message):
    global City
    while City == '':
        try:
            int(message.text)
            bot.send_message(message.chat.id, '–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ')
        except ValueError:
            try:
                City = str(message.text)
            except ValueError:
                bot.send_message(message.chat.id, '–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ')

    msg = bot.send_message(message.chat.id, '–†–∞—Å—Å–∫–∞–∂–∏ —á—Ç–æ-—Ç–æ –æ —Å–µ–±–µ. –≠—Ç–æ –ø–æ–≤—ã—Å–∏—Ç —à–∞–Ω—Å –Ω–∞ –≤–∑–∞–∏–º–Ω—É—é —Å–∏–º–ø–∞—Ç–∏—é:)')
    bot.register_next_step_handler(msg, get_userDescription)


def get_userDescription(message):
    global UserDescription
    UserDescription = message.text
    database.db_user_val(UserID, UserName, Age, GenderID, City, MaleSearchID, UserDescription)

    rmk = types.ReplyKeyboardMarkup()
    rmk.add(types.KeyboardButton('–°–æ—Ö—Ä–∞–Ω–∏—Ç—å'))

    msg = bot.send_message(message.chat.id,
                           '–í—ã–±–µ—Ä–∏ —Å–≤–æ–∏ –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è –≤ –µ–¥–µ, –Ω–∞–ø–∏—Å–∞–≤ —Å–æ–æ—Ç–≤–µ—Ç—Å–≤—É—é—â–∏–µ —Ü–∏—Ñ—Ä—ã –≤ —á–∞—Ç, –∫–∞–∫ –∑–∞–∫–æ–Ω—á–∏—à—å –Ω–∞–∂–º–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É:\n\n'
                           '1 - –§–∞—Å—Ç—Ñ—É–¥\n'
                           '2 - –ö–∏—Ç–∞–π—Å–∫–∞—è –∫—É—Ö–Ω—è\n'
                           '3 - –Ø–ø–æ–Ω—Å–∫–∞—è –∫—É—Ö–Ω—è\n'
                           '4 - –ì—Ä—É–∑–∏–Ω—Å–∫–∞—è –∫—É—Ö–Ω—è\n'
                           '5 - –ò—Ç–∞–ª—å—è–Ω–∞—Å–∫–∞—è –∫—É—Ö–Ω—è\n', reply_markup=rmk)

    bot.register_next_step_handler(msg, get_userFood)


def get_userFood(message):
    if message.text == '–°–æ—Ö—Ä–∞–Ω–∏—Ç—å':
        get_firstPhoto(message)
    else:
        try:
            int(message.text)
        except ValueError:
            msg = bot.send_message(message.chat.id, '–ú–æ–∂–Ω–æ –≤–≤–æ–¥–∏—Ç—å —Ç–æ–ª—å–∫–æ —Ü–∏—Ñ—Ä—ã!\n–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑:')
            bot.register_next_step_handler(msg, get_userFood)

        if int(message.text) > 5 or int(message.text) <= 0:
            msg = bot.send_message(message.chat.id,
                                   '–ó–Ω–∞—á–µ–Ω–∏–µ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –±–æ–ª—å—à–µ 0 –∏ –º–µ–Ω—å—à–µ –∏–ª–∏ —Ä–∞–≤–Ω–æ 5!\n–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑:')
            bot.register_next_step_handler(msg, get_userFood)
        else:
            database.db_prefer_val(UserID, message.text, message)
            msg = bot.send_message(message.chat.id, '–ü—Ä–æ–¥–æ–ª–∂–∞–π—Ç–µ!\n–ï—Å–ª–∏ —Ö–æ—Ç–∏—Ç–µ –∑–∞–∫–æ–Ω—á–∏—Ç—å –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É:')
            bot.register_next_step_handler(msg, get_userFood)


def get_firstPhoto(message):
    rmk = types.ReplyKeyboardRemove()

    msg = bot.send_message(message.chat.id, '–û—Å—Ç–∞–ª—Å—è –ø–æ—Å–ª–µ–¥–Ω–∏–π —à–∞–≥! –û—Ç–ø—Ä–∞–≤—å—Ç–µ –¥–æ 3-—Ö —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π:', reply_markup=rmk)
    bot.register_next_step_handler(msg, get_photo)


def get_photo(message):
    rmk = types.ReplyKeyboardMarkup()
    rmk.add(types.KeyboardButton('–°–æ—Ö—Ä–∞–Ω–∏—Ç—å'))
    global PhotoCount

    if message.text == '–°–æ—Ö—Ä–∞–Ω–∏—Ç—å':
        if PhotoCount != 0:
            final(message)
        else:
            msg = bot.send_message(message.chat.id, '–í—ã –Ω–µ –¥–æ–±–∞–≤–∏–ª–∏ –Ω–∏ –æ–¥–Ω–æ–π —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏!\n–ú—ã –Ω–µ –º–æ–∂–µ–º –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å, –ø–æ–∫–∞ –≤—ã –Ω–µ –¥–æ–±–∞–≤–∏—Ç–µ —Ö–æ—Ç—è –±—ã 1 —Ñ–æ—Ç–æ', reply_markup=rmk)
            bot.register_next_step_handler(msg, get_photo)
    elif message.content_type == 'photo':
        messageLength = message[-1].message_id - message.message_id

        if messageLength > 3:
            msg = bot.send_message(message.chat.id, '–ù–µ–ª—å–∑—è –¥–æ–±–∞–≤–ª—è—Ç—å –±–æ–ª—å—à–µ 3-—Ö —Ñ–æ—Ç–æ!\n –ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–ø—ã—Ç–∫—É –ª–∏–±–æ —Å–æ—Ö—Ä–∞–Ω–∏—Ç–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç', reply_markup=rmk)
            bot.register_next_step_handler(msg, get_photo)
        elif messageLength > (3 - PhotoCount):
            msg = bot.send_message(message.chat.id, f'–í—ã –º–æ–∂–µ—Ç–µ –¥–æ–±–∞–≤–∏—Ç—å –µ—â–µ {3 - PhotoCount}!\n –ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–ø—ã—Ç–∫—É –ª–∏–±–æ —Å–æ—Ö—Ä–∞–Ω–∏—Ç–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç.', reply_markup=rmk)
            bot.register_next_step_handler(msg, get_photo)
        elif messageLength > 1:
            PhotoCount += message[-1].message_id - message.message_id
            print('—Å–æ—Å–∏')
#           for c in message.photo:
#              src = database.save_photo(c)
#             database.insert_blob(UserID, src)

            if PhotoCount < 3:
                msg = bot.send_message(message.chat.id, f'–û—Ç–ª–∏—á–Ω–æ! –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ {PhotoCount} –∏–∑ 3 —Ñ–æ—Ç–æ\n–ï—Å–ª–∏ —Ö–æ—Ç–∏—Ç–µ –∑–∞–∫–æ–Ω—á–∏—Ç—å –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É', reply_markup=rmk)
                bot.register_next_step_handler(msg, get_photo)
            else:
                bot.send_message(message.chat.id, '–û—Ç–ª–∏—á–Ω–æ! –í—Å–µ —Ñ–æ—Ç–æ –¥–æ–±–∞–≤–ª–µ–Ω—ã, –ø–µ—Ä–µ–π–¥–µ–º –¥–∞–ª–µ–µ')
                final(message)
        else:
            src = database.save_photo(message)
            database.insert_blob(UserID, src)
            PhotoCount += 1

            if PhotoCount < 3:
                msg = bot.send_message(message.chat.id, f'–û—Ç–ª–∏—á–Ω–æ! –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ {PhotoCount} –∏–∑ 3 —Ñ–æ—Ç–æ\n–ï—Å–ª–∏ —Ö–æ—Ç–∏—Ç–µ –∑–∞–∫–æ–Ω—á–∏—Ç—å –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É', reply_markup=rmk)
                bot.register_next_step_handler(msg, get_photo)
            else:
                bot.send_message(message.chat.id, '–û—Ç–ª–∏—á–Ω–æ! –í—Å–µ —Ñ–æ—Ç–æ –¥–æ–±–∞–≤–ª–µ–Ω—ã, –ø–µ—Ä–µ–π–¥–µ–º –¥–∞–ª–µ–µ')
                final(message)
    else:
        bot.reply_to(message, "–ú–æ–∂–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å —Ç–æ–ª—å–∫–æ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏!\n(–ö–æ–≥–¥–∞ –≤—ã–±–∏—Ä–∞–µ—Ç–µ —Ñ–æ—Ç–æ –ø–æ—Å—Ç–∞–≤—å—Ç–µ –≥–∞–ª–æ—á–∫—É –Ω–∞–ø—Ä–æ—Ç–∏–≤ \'–°–∂–∞—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ\')")
        msg = bot.send_message(message.chat.id, '–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑!', reply_markup=rmk)
        bot.register_next_step_handler(msg, get_photo)


def final(message):
    bot.send_message(message.chat.id, 'suck my nuts')


@bot.message_handler(commands='menu')
def menu(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    item1 = types.KeyboardButton('üë§ –ò–∑–º–µ–Ω–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è')
    item2 = types.KeyboardButton('üîç –ü–æ–∏—Å–∫')

    markup.add(item1, item2)
    msg = bot.send_message(message.chat.id, '–í—ã–±–µ—Ä–∏, —á—Ç–æ —Ç–µ–±—è –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç', reply_markup=markup)
    bot.register_next_step_handler(msg, menu_choice)


def menu_choice(message):
    if message.text == 'üë§ –ò–∑–º–µ–Ω–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è':
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        item1 = types.KeyboardButton('üë§ –ò–º—è')
        item2 = types.KeyboardButton('üë§ –í–æ–∑—Ä–∞—Å—Ç')
        item3 = types.KeyboardButton('üë§ –ü–æ–ª')
        item4 = types.KeyboardButton('üë§ –ì–æ—Ä–æ–¥')
        item5 = types.KeyboardButton('üë§ –û–ø–∏—Å–∞–Ω–∏–µ')
        item6 = types.KeyboardButton('üë§ –ü—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è –≤ –µ–¥–µ')
        markup.add(item1, item2, item3, item4, item5, item6)
        msg = bot.send_message(message.chat.id, '–ß—Ç–æ —Ö–æ—á–µ—à—å –∏–∑–º–µ–Ω–∏—Ç—å?', reply_markup=markup)
        bot.register_next_step_handler(msg, change_UserSettings)
    elif message.text == 'üîç –ü–æ–∏—Å–∫':
        print()


def change_UserSettings(message):
    if message.text == 'üë§ –ò–º—è':
        welcome(message)
    elif message.text == 'üë§ –ò–º—è':
        welcome(message)
    elif message.text == 'üë§ –ò–º—è':
        welcome(message)
    elif message.text == 'üë§ –ò–º—è':
        welcome(message)
    elif message.text == 'üë§ –ò–º—è':
        welcome(message)
    elif message.text == 'üë§ –ò–º—è':
        welcome(message)


bot.infinity_polling()
