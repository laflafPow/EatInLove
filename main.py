# –û—Å–Ω–æ–≤–Ω–æ–π —Ñ–∞–π–ª, –≥–¥–µ –±—É–¥–µ—Ç –ø—Ä–æ—Ö–æ–¥–∏—Ç—å –≥–ª–∞–≤–Ω—ã–π –ø–æ—Ç–æ–∫ –ø—Ä–æ–≥—Ä–∞–º–º—ã
import sqlite3
from pathlib import Path

import telebot
from telebot import types
import database
import userInteraction
import base64

# –≤ —Ñ–∞–π–ª–µ database –±—É–¥—É—Ç —Ö—Ä–∞–Ω–∏—Ç—å—Å—è –≤—Å–µ –º–µ—Ç–æ–¥—ã –¥–ª—è –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è —Å –±–¥

token = '5270245996:AAEDYl1qVn02R-JFxF5HhrJ47RQwEItT3ww'
bot = telebot.TeleBot(token)


conn = sqlite3.connect('db/UserDatabase.db', check_same_thread=False)
cursor = conn.cursor()


# –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
UserName = ''
Age = 0
GenderID = 0
City = ''
MaleSearchID = 0
UserDescription = ''
PhotoCount = 0


@bot.message_handler(commands='start')
def start_message(message):
    cursor.execute(
        'INSERT INTO User (UserID, ChatID) VALUES (?, ?)',
        (message.from_user.id, message.chat.id))
    conn.commit()

    rmk = types.ReplyKeyboardMarkup()
    rmk.add(types.KeyboardButton('–û–öüëå'))

    bot.send_message(message.chat.id, '–ü—Ä–∏–≤–µ—Ç! –Ø –ø–æ–º–æ–≥—É –Ω–∞–π—Ç–∏'
                                      ' —Ç–µ–±–µ —á–µ–ª–æ–≤–µ–∫–∞ —Å –∫–æ—Ç–æ—Ä—ã–º '
                                      '—Ç—ã —Å–º–æ–∂–µ—à—å —Ö–æ—Ä–æ—à–æ –ø—Ä–æ–≤–µ—Å—Ç–∏ –≤—Ä–µ–º—è,'
                                      ' —Ç.–µ. –ø–æ–∫—É—à–∞—Ç—å, –Ω–æ –¥–ª—è –Ω–∞—á–∞–ª–∞'
                                      ' —Ä–∞—Å—Å–∫–∞–∂–∏ —á—É—Ç–∫–∞ –æ —Å–µ–±–µ,'
                                      ' —á—Ç–æ–±—ã —è –Ω–∞—à–µ–ª –ø–æ–¥—Ö–æ–¥—è—â–µ–≥–æ —á–µ–ª–æ–≤–µ–∫–∞...', reply_markup=rmk)

    bot.register_next_step_handler(message, welcome)


def welcome(message):
    rmk = types.ReplyKeyboardRemove()

    msg = bot.send_message(message.chat.id, '–ö–∞–∫ —Ç–µ–±—è –∑–æ–≤—É—Ç?', reply_markup=rmk)
    bot.register_next_step_handler(msg, get_Name)


def get_Name(message):
    database.db_changeName(message.from_user.id, message.text)
    msg = bot.send_message(message.chat.id, '–ö—Ä—É—Ç–æ–µ –∏–º—è, –ø–µ—Ä–µ–π–¥–µ–º –¥–∞–ª—å—à–µ, —Å–∫–æ–ª—å–∫–æ —Ç–µ–±–µ –ª–µ—Ç?')
    bot.register_next_step_handler(msg, get_Age)


def get_Age(message):
    if int(message.text):
        if 100 >= int(message.text) > 0:
            database.db_changeAge(message.from_user.id, int(message.text))
            rmk = types.ReplyKeyboardMarkup()
            rmk.add(types.KeyboardButton('–ú—É–∂—Å–∫–æ–π'), types.KeyboardButton('–ñ–µ–Ω—Å–∫–∏–π'))

            msg = bot.send_message(message.chat.id, '–û—Ç–ª–∏—á–Ω–æ, —É–∫–∞–∂–∏ –ø–æ–ª', reply_markup=rmk)
            bot.register_next_step_handler(msg, get_Gender)
        else:
            bot.send_message(message.chat.id, '–í–≤–µ–¥–µ–Ω–µ–Ω–æ –Ω–µ–∫–∫–æ—Ä–µ–∫—Ç–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ')
            msg = bot.send_message(message.chat.id, '–ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–ø—ã—Ç–∫—É')
            bot.register_next_step_handler(msg, get_Age)
    else:
        bot.send_message(message.chat.id, '–í–≤–µ–¥–µ–Ω–µ–Ω–æ –Ω–µ–∫–∫–æ—Ä–µ–∫—Ç–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ')
        msg = bot.send_message(message.chat.id, '–ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–ø—ã—Ç–∫—É')
        bot.register_next_step_handler(msg, get_Age)


def get_Gender(message):
    if message.text == '–ú—É–∂—Å–∫–æ–π':
        database.db_changeGender(message.from_user.id, 2)

        rmk = types.ReplyKeyboardMarkup()
        rmk.add(types.KeyboardButton('–ú—É–∂—á–∏–Ω'), types.KeyboardButton('–ñ–µ–Ω—â–∏–Ω'), types.KeyboardButton('–í—Å–µ—Ö'))

        msg = bot.send_message(message.chat.id, '–ö–æ–≥–æ –±—É–¥–µ–º –∏—Å–∫–∞—Ç—å?', reply_markup=rmk)
        bot.register_next_step_handler(msg, get_MaleSearch)
    elif message.text == '–ñ–µ–Ω—Å–∫–∏–π':
        database.db_changeGender(message.from_user.id, 1)

        rmk = types.ReplyKeyboardMarkup()
        rmk.add(types.KeyboardButton('–ú—É–∂—á–∏–Ω'), types.KeyboardButton('–ñ–µ–Ω—â–∏–Ω'), types.KeyboardButton('–í—Å–µ—Ö'))

        msg = bot.send_message(message.chat.id, '–ö–æ–≥–æ –±—É–¥–µ–º –∏—Å–∫–∞—Ç—å?', reply_markup=rmk)
        bot.register_next_step_handler(msg, get_MaleSearch)
    else:
        bot.send_message(message.chat.id, '–í–≤–µ–¥–µ–Ω–µ–Ω–æ –Ω–µ–∫–∫–æ—Ä–µ–∫—Ç–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ')
        msg = bot.send_message(message.chat.id, '–ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–ø—ã—Ç–∫—É')
        bot.register_next_step_handler(msg, get_Gender)


def get_MaleSearch(message):
    if message.text == '–ú—É–∂—á–∏–Ω':
        database.db_changeMaleSearch(message.from_user.id, 2)

        rmk = types.ReplyKeyboardRemove()

        msg = bot.send_message(message.chat.id, '–£–∫–∞–∂–∏—Ç–µ –≥–æ—Ä–æ–¥!', reply_markup=rmk)
        bot.register_next_step_handler(msg, get_City)
    elif message.text == '–ñ–µ–Ω—â–∏–Ω':
        database.db_changeMaleSearch(message.from_user.id, 1)

        rmk = types.ReplyKeyboardRemove()

        msg = bot.send_message(message.chat.id, '–£–∫–∞–∂–∏—Ç–µ –≥–æ—Ä–æ–¥!', reply_markup=rmk)
        bot.register_next_step_handler(msg, get_City)
    elif message.text == '–í—Å–µ—Ö':
        database.db_changeMaleSearch(message.from_user.id, 3)

        rmk = types.ReplyKeyboardRemove()

        msg = bot.send_message(message.chat.id, '–£–∫–∞–∂–∏—Ç–µ –≥–æ—Ä–æ–¥!', reply_markup=rmk)
        bot.register_next_step_handler(msg, get_City)
    else:
        bot.send_message(message.chat.id, '–í–≤–µ–¥–µ–Ω–µ–Ω–æ –Ω–µ–∫–∫–æ—Ä–µ–∫—Ç–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ')
        msg = bot.send_message(message.chat.id, '–ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–ø—ã—Ç–∫—É')
        bot.register_next_step_handler(msg, get_MaleSearch)


def get_City(message):
    database.db_changeCity(message.from_user.id, message.text)

    msg = bot.send_message(message.chat.id, '–†–∞—Å—Å–∫–∞–∂–∏ —á—Ç–æ-—Ç–æ –æ —Å–µ–±–µ. –≠—Ç–æ –ø–æ–≤—ã—Å–∏—Ç —à–∞–Ω—Å –Ω–∞ –≤–∑–∞–∏–º–Ω—É—é —Å–∏–º–ø–∞—Ç–∏—é:)')
    bot.register_next_step_handler(msg, get_userDescription)


def get_userDescription(message):
    database.db_changeDescription(message.from_user.id, message.text)

    rmk = types.ReplyKeyboardMarkup()
    rmk.add(types.KeyboardButton('–°–æ—Ö—Ä–∞–Ω–∏—Ç—å'))

    msg = bot.send_message(message.chat.id,
                           '–í—ã–±–µ—Ä–∏ —Å–≤–æ–∏ –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è –≤ –µ–¥–µ, –Ω–∞–ø–∏—Å–∞–≤ —Å–æ–æ—Ç–≤–µ—Ç—Å–≤—É—é—â–∏–µ —Ü–∏—Ñ—Ä—ã –≤ —á–∞—Ç, –∫–∞–∫ –∑–∞–∫–æ–Ω—á–∏—à—å –Ω–∞–∂–º–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É:\n\n'
                           '1 - –§–∞—Å—Ç—Ñ—É–¥\n'
                           '2 - –ö–∏—Ç–∞–π—Å–∫–∞—è –∫—É—Ö–Ω—è\n'
                           '3 - –Ø–ø–æ–Ω—Å–∫–∞—è –∫—É—Ö–Ω—è\n'
                           '4 - –ì—Ä—É–∑–∏–Ω—Å–∫–∞—è –∫—É—Ö–Ω—è\n'
                           '5 - –ò—Ç–∞–ª—å—è–Ω–∞—Å–∫–∞—è –∫—É—Ö–Ω—è\n', reply_markup=rmk)

    bot.register_next_step_handler(msg, get_userFood)


def get_userFood(message):
    if message.text == '–°–æ—Ö—Ä–∞–Ω–∏—Ç—å':
        final(message)
    else:
        try:
            int(message.text)
        except ValueError:
            msg = bot.send_message(message.chat.id, '–ú–æ–∂–Ω–æ –≤–≤–æ–¥–∏—Ç—å —Ç–æ–ª—å–∫–æ —Ü–∏—Ñ—Ä—ã!\n–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑:')
            bot.register_next_step_handler(msg, get_userFood)

        if int(message.text) > 5 or int(message.text) <= 0:
            msg = bot.send_message(message.chat.id,
                                   '–ó–Ω–∞—á–µ–Ω–∏–µ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –±–æ–ª—å—à–µ 0 –∏ –º–µ–Ω—å—à–µ –∏–ª–∏ —Ä–∞–≤–Ω–æ 5!\n–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑:')
            bot.register_next_step_handler(msg, get_userFood)
        else:
            database.db_prefer_val(message.from_user.id, message.text, message)
            msg = bot.send_message(message.chat.id, '–ü—Ä–æ–¥–æ–ª–∂–∞–π—Ç–µ!\n–ï—Å–ª–∏ —Ö–æ—Ç–∏—Ç–µ –∑–∞–∫–æ–Ω—á–∏—Ç—å –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É:')
            bot.register_next_step_handler(msg, get_userFood)


def get_firstPhoto(message):
    rmk = types.ReplyKeyboardRemove()

    msg = bot.send_message(message.chat.id, '–û—Å—Ç–∞–ª—Å—è –ø–æ—Å–ª–µ–¥–Ω–∏–π —à–∞–≥! –û—Ç–ø—Ä–∞–≤—å—Ç–µ –¥–æ 3-—Ö —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π:', reply_markup=rmk)
    bot.register_next_step_handler(msg, get_photo)


def get_photo(message):
    rmk = types.ReplyKeyboardMarkup()
    rmk.add(types.KeyboardButton('–°–æ—Ö—Ä–∞–Ω–∏—Ç—å'))
    global PhotoCount

    if message.text == '–°–æ—Ö—Ä–∞–Ω–∏—Ç—å':
        if PhotoCount != 0:
            final(message)
        else:
            msg = bot.send_message(message.chat.id, '–í—ã –Ω–µ –¥–æ–±–∞–≤–∏–ª–∏ –Ω–∏ –æ–¥–Ω–æ–π —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏!\n–ú—ã –Ω–µ –º–æ–∂–µ–º –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å, –ø–æ–∫–∞ –≤—ã –Ω–µ –¥–æ–±–∞–≤–∏—Ç–µ —Ö–æ—Ç—è –±—ã 1 —Ñ–æ—Ç–æ', reply_markup=rmk)
            bot.register_next_step_handler(msg, get_photo)
    elif message.content_type == 'photo':
        messageLength = message[-1].message_id - message.message_id

        if messageLength > 3:
            msg = bot.send_message(message.chat.id, '–ù–µ–ª—å–∑—è –¥–æ–±–∞–≤–ª—è—Ç—å –±–æ–ª—å—à–µ 3-—Ö —Ñ–æ—Ç–æ!\n –ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–ø—ã—Ç–∫—É –ª–∏–±–æ —Å–æ—Ö—Ä–∞–Ω–∏—Ç–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç', reply_markup=rmk)
            bot.register_next_step_handler(msg, get_photo)
        elif messageLength > (3 - PhotoCount):
            msg = bot.send_message(message.chat.id, f'–í—ã –º–æ–∂–µ—Ç–µ –¥–æ–±–∞–≤–∏—Ç—å –µ—â–µ {3 - PhotoCount}!\n –ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–ø—ã—Ç–∫—É –ª–∏–±–æ —Å–æ—Ö—Ä–∞–Ω–∏—Ç–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç.', reply_markup=rmk)
            bot.register_next_step_handler(msg, get_photo)
        elif messageLength > 1:
            PhotoCount += message[-1].message_id - message.message_id
            print('—Å–æ—Å–∏')
#           for c in message.photo:
#              src = database.save_photo(c)
#             database.insert_blob(UserID, src)

            if PhotoCount < 3:
                msg = bot.send_message(message.chat.id, f'–û—Ç–ª–∏—á–Ω–æ! –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ {PhotoCount} –∏–∑ 3 —Ñ–æ—Ç–æ\n–ï—Å–ª–∏ —Ö–æ—Ç–∏—Ç–µ –∑–∞–∫–æ–Ω—á–∏—Ç—å –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É', reply_markup=rmk)
                bot.register_next_step_handler(msg, get_photo)
            else:
                bot.send_message(message.chat.id, '–û—Ç–ª–∏—á–Ω–æ! –í—Å–µ —Ñ–æ—Ç–æ –¥–æ–±–∞–≤–ª–µ–Ω—ã, –ø–µ—Ä–µ–π–¥–µ–º –¥–∞–ª–µ–µ')
                final(message)
        else:
            src = database.save_photo(message)
            database.insert_blob(message.user_from.id, src)
            PhotoCount += 1

            if PhotoCount < 3:
                msg = bot.send_message(message.chat.id, f'–û—Ç–ª–∏—á–Ω–æ! –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ {PhotoCount} –∏–∑ 3 —Ñ–æ—Ç–æ\n–ï—Å–ª–∏ —Ö–æ—Ç–∏—Ç–µ –∑–∞–∫–æ–Ω—á–∏—Ç—å –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É', reply_markup=rmk)
                bot.register_next_step_handler(msg, get_photo)
            else:
                bot.send_message(message.chat.id, '–û—Ç–ª–∏—á–Ω–æ! –í—Å–µ —Ñ–æ—Ç–æ –¥–æ–±–∞–≤–ª–µ–Ω—ã, –ø–µ—Ä–µ–π–¥–µ–º –¥–∞–ª–µ–µ')
                final(message)
    else:
        bot.reply_to(message, "–ú–æ–∂–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å —Ç–æ–ª—å–∫–æ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏!\n(–ö–æ–≥–¥–∞ –≤—ã–±–∏—Ä–∞–µ—Ç–µ —Ñ–æ—Ç–æ –ø–æ—Å—Ç–∞–≤—å—Ç–µ –≥–∞–ª–æ—á–∫—É –Ω–∞–ø—Ä–æ—Ç–∏–≤ \'–°–∂–∞—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ\')")
        msg = bot.send_message(message.chat.id, '–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑!', reply_markup=rmk)
        bot.register_next_step_handler(msg, get_photo)


def final(message):
    bot.send_message(message.chat.id, '–≠—Ç–æ –≤–∞—à–∞ –∞–Ω–∫–µ—Ç–∞')
    menu(message)


@bot.message_handler(commands='–ª–∞–π–∫')
def YouLiked(message):
    cursor.execute('SELECT Who FROM UserLike WHERE Whom=? AND Love=? ORDER BY ID DESC LIMIT 1', (message.from_user.id, False))
    database.Like(message.from_user.id, cursor.fetchall()[0])

    mem = message.from_user.username

    bot.send_message(message.chat.id, f'–ü—Ä–∏—è—Ç–Ω–æ–≥–æ –∞–ø–ø–µ—Ç–∏—Ç–∞! \n –í–∞—à —á–∞—Ç: @{mem}')


@bot.message_handler(commands='–¥–∏–∑–ª–∞–π–∫')
def YouDisLike(message):
    bot.send_message(message.chat.id, f'–ù–µ —Ä–∞—Å—Å—Ç—Ä–∞–∏–≤–∞–π—Å—è, —Å–∫–æ—Ä–æ —Ç—ã —Ç–æ—á–Ω–æ –Ω–∞–π–¥—ë—à—å —Å–≤–æ—é –ø–æ–ª–æ–≤–∏–Ω–∫—É!')
    menu(message)


@bot.message_handler(commands='menu')
def menu(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    item1 = types.KeyboardButton('üë§ –ò–∑–º–µ–Ω–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è')
    item2 = types.KeyboardButton('üîç –ü–æ–∏—Å–∫')
    markup.add(item1, item2)

    msg = bot.send_message(message.chat.id, '–í—ã–±–µ—Ä–∏, —á—Ç–æ —Ç–µ–±—è –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç', reply_markup=markup)
    bot.register_next_step_handler(msg, menu_choice)


def menu_choice(message):
    if message.text == 'üë§ –ò–∑–º–µ–Ω–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è':
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        item1 = types.KeyboardButton('üë§ –ò–º—è')
        item2 = types.KeyboardButton('üë§ –í–æ–∑—Ä–∞—Å—Ç')
        item3 = types.KeyboardButton('üë§ –ü–æ–ª')
        item4 = types.KeyboardButton('üë§ –ì–æ—Ä–æ–¥')
        item5 = types.KeyboardButton('üë§ –û —Å–µ–±–µ')
        item6 = types.KeyboardButton('üë§ –í–∫—É—Å—ã')
        item7 = types.KeyboardButton('üë§ –§–æ—Ç–æ')
        markup.add(item1, item2, item3, item4, item5, item6, item7)
        msg = bot.send_message(message.chat.id, '–ß—Ç–æ —Ö–æ—á–µ—à—å –∏–∑–º–µ–Ω–∏—Ç—å?', reply_markup=markup)
        bot.register_next_step_handler(msg, change_UserSettings)
    elif message.text == 'üîç –ü–æ–∏—Å–∫':
        Search(message)
    else:
        bot.send_message(message.chat.id, '–ü–æ–ø—Ä–æ–±—É–µ–º –µ—â–µ —Ä–∞–∑!')
        menu(message)


def change_Name(message):
    rmk = types.ReplyKeyboardRemove()

    if message.text == 'üë§ –ò–º—è':
        msg = bot.send_message(message.chat.id, '–ö–∞–∫–æ–µ –∏–º—è —Ö–æ—Ç–∏—Ç–µ –≤–∑—è—Ç—å –Ω–∞ —ç—Ç–æ—Ç —Ä–∞–∑?', reply_markup=rmk)
        bot.register_next_step_handler(msg, change_Name)
    else:
        database.db_changeName(message.from_user.id, message.text)
        bot.send_message(message.chat.id, '–û—Ç–ª–∏—á–Ω–æ, –∏–º—è –∏–∑–º–µ–Ω–µ–Ω–æ')
        final(message)


def change_Age(message):
    rmk = types.ReplyKeyboardRemove()

    if message.text == 'üë§ –í–æ–∑—Ä–∞—Å—Ç':
        msg = bot.send_message(message.chat.id, '–ù–∞–ø–∏—à–∏—Ç–µ –≤–∞—à –≤–æ–∑—Ä–∞—Å—Ç –ø–æ –Ω–æ–≤–æ–π', reply_markup=rmk)
        bot.register_next_step_handler(msg, change_Age)
    else:
        if int(message.text):
            if 100 >= int(message.text) > 0:
                database.db_changeAge(message.from_user.id, int(message.text))
                bot.send_message(message.chat.id, '–û—Ç–ª–∏—á–Ω–æ, –≤–æ–∑—Ä–∞—Å—Ç –∏–∑–º–µ–Ω–µ–Ω')
                final(message)
            else:
                bot.send_message(message.chat.id, '–í–≤–µ–¥–µ–Ω–µ–Ω–æ –Ω–µ–∫–∫–æ—Ä–µ–∫—Ç–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ')
                msg = bot.send_message(message.chat.id, '–ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–ø—ã—Ç–∫—É')
                bot.register_next_step_handler(msg, change_Age)
        else:
            bot.send_message(message.chat.id, '–í–≤–µ–¥–µ–Ω–µ–Ω–æ –Ω–µ–∫–∫–æ—Ä–µ–∫—Ç–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ')
            msg = bot.send_message(message.chat.id, '–ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–ø—ã—Ç–∫—É')
            bot.register_next_step_handler(msg, change_Age)


def change_Gender(message):
    rmk = types.ReplyKeyboardMarkup()
    rmk.add(types.KeyboardButton('–ú—É–∂—Å–∫–æ–π'), types.KeyboardButton('–ñ–µ–Ω—Å–∫–∏–π'))

    if message.text == 'üë§ –ü–æ–ª':
        msg = bot.send_message(message.chat.id, '–£–∫–∞–∂–∏ —Å–≤–æ–π –ø–æ–ª', reply_markup=rmk)
        bot.register_next_step_handler(msg, change_Gender)
    else:
        if message.text == '–ú—É–∂—Å–∫–æ–π':
            database.db_changeGender(message.from_user.id, 2)
            bot.send_message(message.chat.id, '–û—Ç–ª–∏—á–Ω–æ, –ø–æ–ª –∏–∑–º–µ–Ω–µ–Ω, –ø–µ—Ä–µ–π–¥–µ–º –¥–∞–ª–µ–µ')
            change_MaleSearch('–°–º–µ–Ω–∞')
        elif message.text == '–ñ–µ–Ω—Å–∫–∏–π':
            database.db_changeGender(message.from_user.id, 1)
            bot.send_message(message.chat.id, '–û—Ç–ª–∏—á–Ω–æ, –ø–æ–ª –∏–∑–º–µ–Ω–µ–Ω, –ø–µ—Ä–µ–π–¥–µ–º –¥–∞–ª–µ–µ')
            change_MaleSearch(message)
        else:
            bot.send_message(message.chat.id, '–ü–æ–ª –≤–≤–µ–¥–µ–Ω –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ')
            msg = bot.send_message(message.chat.id, '–ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–ø—ã—Ç–∫—É')
            bot.register_next_step_handler(msg, change_Gender)


def change_MaleSearch(message):
    rmk = types.ReplyKeyboardMarkup()
    rmk.add(types.KeyboardButton('–ú—É–∂—á–∏–Ω'), types.KeyboardButton('–ñ–µ–Ω—â–∏–Ω'), types.KeyboardButton('–í—Å–µ—Ö'))

    if message.text == '–°–º–µ–Ω–∞':
        msg = bot.send_message(message.chat.id, '–ö–æ–≥–æ –±—É–¥–µ–º –∏—Å–∫–∞—Ç—å?', reply_markup=rmk)
        bot.register_next_step_handler(msg, change_MaleSearch)
    elif message.text == '–ú—É–∂—á–∏–Ω':
        database.db_changeMaleSearch(message.from_user.id, 2)
        bot.send_message(message.chat.id, '–û—Ç–ª–∏—á–Ω–æ! –î–∞–Ω–Ω—ã–µ –∏–∑–º–µ–Ω–µ–Ω—ã')
        final(message)
    elif message.text == '–ñ–µ–Ω—â–∏–Ω':
        database.db_changeMaleSearch(message.from_user.id, 1)
        bot.send_message(message.chat.id, '–û—Ç–ª–∏—á–Ω–æ! –î–∞–Ω–Ω—ã–µ –∏–∑–º–µ–Ω–µ–Ω—ã')
        final(message)
    elif message.text == '–í—Å–µ—Ö':
        database.db_changeMaleSearch(message.from_user.id, 3)
        bot.send_message(message.chat.id, '–û—Ç–ª–∏—á–Ω–æ! –î–∞–Ω–Ω—ã–µ –∏–∑–º–µ–Ω–µ–Ω—ã')
        final(message)
    else:
        bot.send_message(message.chat.id, '–í–≤–µ–¥–µ–Ω–æ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ')
        msg = bot.send_message(message.chat.id, '–ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–ø—ã—Ç–∫—É')
        bot.register_next_step_handler(msg, change_MaleSearch)


def change_City(message):
    rmk = types.ReplyKeyboardRemove()

    if message.text == 'üë§ –ì–æ—Ä–æ–¥':
        msg = bot.send_message(message.chat.id, '–í –∫–∞–∫–æ–º –≥–æ—Ä–æ–¥–µ –≤—ã –∂–∏–≤–µ—Ç–µ —Ç–µ–ø–µ—Ä—å?', reply_markup=rmk)
        bot.register_next_step_handler(msg, change_City)
    else:
        database.db_changeCity(message.from_user.id, message.text)
        bot.send_message(message.chat.id, '–û—Ç–ª–∏—á–Ω–æ, –≥–æ—Ä–æ–¥ –∏–∑–º–µ–Ω–µ–Ω')
        final(message)


def change_Description(message):
    rmk = types.ReplyKeyboardRemove()

    if message.text == 'üë§ –û —Å–µ–±–µ':
        msg = bot.send_message(message.chat.id, '–†–∞—Å—Å–∫–∞–∂–∏—Ç–µ –æ —Å–µ–±–µ', reply_markup=rmk)
        bot.register_next_step_handler(msg, change_City)
    else:
        database.db_changeDescription(message.from_user.id, message.text)
        bot.send_message(message.chat.id, '–û—Ç–ª–∏—á–Ω–æ, –æ–ø–∏—Å–∞–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–æ')
        final(message)


def change_Prefer_Menu(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    item1 = types.KeyboardButton('üë§ –£–¥–∞–ª–∏—Ç—å –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏–µ')
    item2 = types.KeyboardButton('üë§ –î–æ–±–∞–≤–∏—Ç—å –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏–µ')
    item3 = types.KeyboardButton('üë§ –ù–∞–∑–∞–¥')
    markup.add(item1, item2, item3)

    if message.text == 'üë§ –í–∫—É—Å—ã':
        msg = bot.send_message(message.chat.id, '–í—ã–±–µ—Ä–∏ –¥–µ–π—Å—Ç–≤–∏–µ', reply_markup=markup)
        bot.register_next_step_handler(msg, change_Prefer_Menu)
    elif message.text == 'üë§ –£–¥–∞–ª–∏—Ç—å –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏–µ':
        change_Prefer_Delete(message)
    elif message.text == 'üë§ –î–æ–±–∞–≤–∏—Ç—å –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏–µ':
        change_Prefer_Add(message)
    elif message.text == 'üë§ –ù–∞–∑–∞–¥':
        menu(message)
    else:
        bot.send_message(message.from_user.id, '–í–≤–µ–¥–µ–Ω–æ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ')
        msg = bot.send_message(message.chat.id, '–ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–ø—ã—Ç–∫—É')
        bot.register_next_step_handler(msg, change_Prefer_Menu)


def change_Prefer_Delete(message):
    if message.text == 'üë§ –£–¥–∞–ª–∏—Ç—å –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏–µ':
        rmk = types.ReplyKeyboardMarkup()
        rmk.add(types.KeyboardButton('–°–æ—Ö—Ä–∞–Ω–∏—Ç—å'))

        msg = bot.send_message(message.chat.id,
                               '–ß—Ç–æ–±—ã —É–¥–∞–ª–∏—Ç—å –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏–µ, –Ω–∞–ø–∏—à–∏ —Å–æ–æ—Ç–≤–µ—Ç—Å–≤—É—é—â–∏–µ —Ü–∏—Ñ—Ä—ã –≤ —á–∞—Ç, –∫–∞–∫ –∑–∞–∫–æ–Ω—á–∏—à—å –Ω–∞–∂–º–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É:\n\n'
                               '1 - –§–∞—Å—Ç—Ñ—É–¥\n'
                               '2 - –ö–∏—Ç–∞–π—Å–∫–∞—è –∫—É—Ö–Ω—è\n'
                               '3 - –Ø–ø–æ–Ω—Å–∫–∞—è –∫—É—Ö–Ω—è\n'
                               '4 - –ì—Ä—É–∑–∏–Ω—Å–∫–∞—è –∫—É—Ö–Ω—è\n'
                               '5 - –ò—Ç–∞–ª—å—è–Ω–∞—Å–∫–∞—è –∫—É—Ö–Ω—è\n', reply_markup=rmk)
        bot.register_next_step_handler(msg, change_Prefer_Delete)

    elif message.text == '–°–æ—Ö—Ä–∞–Ω–∏—Ç—å':
        bot.send_message(message.chat.id, '–û—Ç–ª–∏—á–Ω–æ, –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è –∏–∑–º–µ–Ω–µ–Ω—ã')
        menu(message)
    else:
        try:
            int(message.text)
        except ValueError:
            msg = bot.send_message(message.chat.id, '–ú–æ–∂–Ω–æ –≤–≤–æ–¥–∏—Ç—å —Ç–æ–ª—å–∫–æ —Ü–∏—Ñ—Ä—ã!\n–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑:')
            bot.register_next_step_handler(msg, change_Prefer_Delete)

        if int(message.text) > 5 or int(message.text) <= 0:
            msg = bot.send_message(message.chat.id,
                                   '–ó–Ω–∞—á–µ–Ω–∏–µ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –±–æ–ª—å—à–µ 0 –∏ –º–µ–Ω—å—à–µ –∏–ª–∏ —Ä–∞–≤–Ω–æ 5!\n–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑:')
            bot.register_next_step_handler(msg, change_Prefer_Delete)
        else:
            database.db_deletePrefer(message.from_user.id, int(message), message)
            msg = bot.send_message(message.chat.id, '–ü—Ä–æ–¥–æ–ª–∂–∞–π—Ç–µ!\n–ï—Å–ª–∏ —Ö–æ—Ç–∏—Ç–µ –∑–∞–∫–æ–Ω—á–∏—Ç—å –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É:')
            bot.register_next_step_handler(msg, change_Prefer_Delete)


def change_Prefer_Add(message):
    if message.text == 'üë§ –î–æ–±–∞–≤–∏—Ç—å –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏–µ':
        rmk = types.ReplyKeyboardMarkup()
        rmk.add(types.KeyboardButton('–°–æ—Ö—Ä–∞–Ω–∏—Ç—å'))

        msg = bot.send_message(message.chat.id,
                               '–ß—Ç–æ–±—ã –¥–æ–±–∞–≤–∏—Ç—å –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏–µ, –Ω–∞–ø–∏—à–∏ —Å–æ–æ—Ç–≤–µ—Ç—Å–≤—É—é—â–∏–µ —Ü–∏—Ñ—Ä—ã –≤ —á–∞—Ç, –∫–∞–∫ –∑–∞–∫–æ–Ω—á–∏—à—å –Ω–∞–∂–º–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É:\n\n'
                               '1 - –§–∞—Å—Ç—Ñ—É–¥\n'
                               '2 - –ö–∏—Ç–∞–π—Å–∫–∞—è –∫—É—Ö–Ω—è\n'
                               '3 - –Ø–ø–æ–Ω—Å–∫–∞—è –∫—É—Ö–Ω—è\n'
                               '4 - –ì—Ä—É–∑–∏–Ω—Å–∫–∞—è –∫—É—Ö–Ω—è\n'
                               '5 - –ò—Ç–∞–ª—å—è–Ω–∞—Å–∫–∞—è –∫—É—Ö–Ω—è\n', reply_markup=rmk)
        bot.register_next_step_handler(msg, change_Prefer_Add)

    elif message.text == '–°–æ—Ö—Ä–∞–Ω–∏—Ç—å':
        bot.send_message(message.chat.id, '–û—Ç–ª–∏—á–Ω–æ, –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è –∏–∑–º–µ–Ω–µ–Ω—ã')
        menu(message)
    else:
        try:
            int(message.text)
        except ValueError:
            msg = bot.send_message(message.chat.id, '–ú–æ–∂–Ω–æ –≤–≤–æ–¥–∏—Ç—å —Ç–æ–ª—å–∫–æ —Ü–∏—Ñ—Ä—ã!\n–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑:')
            bot.register_next_step_handler(msg, change_Prefer_Add)

        if int(message.text) > 5 or int(message.text) <= 0:
            msg = bot.send_message(message.chat.id,
                                   '–ó–Ω–∞—á–µ–Ω–∏–µ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –±–æ–ª—å—à–µ 0 –∏ –º–µ–Ω—å—à–µ –∏–ª–∏ —Ä–∞–≤–Ω–æ 5!\n–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑:')
            bot.register_next_step_handler(msg, change_Prefer_Add)
        else:
            database.db_prefer_val(message.from_user.id, int(message), message)
            msg = bot.send_message(message.chat.id, '–ü—Ä–æ–¥–æ–ª–∂–∞–π—Ç–µ!\n–ï—Å–ª–∏ —Ö–æ—Ç–∏—Ç–µ –∑–∞–∫–æ–Ω—á–∏—Ç—å –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É:')
            bot.register_next_step_handler(msg, change_Prefer_Add)


def change_Photo(message):
    print(message)


def change_UserSettings(message):
    if message.text == 'üë§ –ò–º—è':
        change_Name(message)
    elif message.text == 'üë§ –í–æ–∑—Ä–∞—Å—Ç':
        change_Age(message)
    elif message.text == 'üë§ –ü–æ–ª':
        change_Gender(message)
    elif message.text == 'üë§ –ì–æ—Ä–æ–¥':
        change_City(message)
    elif message.text == 'üë§ –û —Å–µ–±–µ':
        change_Description(message)
    elif message.text == 'üë§ –í–∫—É—Å—ã':
        change_Prefer_Menu(message)
    elif message.text == 'üë§ –§–æ—Ç–æ':
        get_firstPhoto(message)
    else:
        bot.send_message(message.chat.id, '–ü–æ–ø—Ä–æ–±—É–µ–º –µ—â–µ —Ä–∞–∑!')
        menu_choice(message)


def Search(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    item1 = types.KeyboardButton('–õ–∞–π–∫')
    item2 = types.KeyboardButton('–î–∏–∑–ª–∞–π–∫')
    item3 = types.KeyboardButton('–ú–µ–Ω—é')
    markup.add(item1, item2, item3)

    cursor.execute('SELECT * FROM User WHERE UserID=?', (message.from_user.id,))

    list1 = list()
    try:
        for i in database.search(message.from_user.id, cursor.fetchall()[5], cursor.fetchall()[4], cursor.fetchall()[3]):
            list1.append(i)
    except Exception:
        list1 = database.search(message.from_user.id, cursor.fetchall()[5], cursor.fetchall()[4], cursor.fetchall()[3])



    bot.send_message(message.chat.id, f"–ò–º—è: {list1[1]}\n–í–æ–∑—Ä–∞—Å—Ç: {list1[2]}\n –ì–æ—Ä–æ–¥: {list1[4]}\n –û —Å–µ–±–µ: \n {list1[6]}")

    if(message.text == '–õ–∞–π–∫'):
        cursor.execute('SELECT Count(*) FROM UserLike WHERE Who =? AND Love =? AND Whom=?', (message.from_user.id, False, list1[0]))
        if cursor.fetchall[0] > 0:
            bot.send_message(message.chat.id, f"–õ–∞–π–∫ –æ—Ñ–æ—Ä–º–ª–µ–Ω")
            return




        database.Like(message.from_user.id, list1[0])
        bot.send_message(message.chat.id, f"–õ–∞–π–∫ –æ—Ñ–æ—Ä–º–ª–µ–Ω")

        cursor.execute('SELECT ChatID FROM User WHERE UserID=?', list1[0])

        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        item1 = types.KeyboardButton('/–ª–∞–π–∫')
        item2 = types.KeyboardButton('/–¥–∏–∑–ª–∞–π–∫')

        markup.add(item1, item2)
        cursor.execute('SELECT * FROM User WHERE UserID=?', (message.from_user.id,))
        bot.send_message(cursor.fetchall()[0], f"–¢–µ–±—è –∫—Ç–æ-—Ç–æ –ª–∞–π–∫–Ω—É–ª: \n –ò–º—è: {cursor.fetchall()[1]}\n–í–æ–∑—Ä–∞—Å—Ç: {cursor.fetchall()[2]}\n –ì–æ—Ä–æ–¥: {cursor.fetchall()[4]}\n –û —Å–µ–±–µ: \n {cursor.fetchall()[6]}", reply_markup = markup)

        Search(message)

        cursor.execute('SELECT Count(*) FROM UserLike WHERE Whom =? AND Love =? AND Who=?', (list1[0], False, message.from_user_id))

        if cursor.fetchall[0] > 0:  # –ï—Å–ª–∏ –µ—Å—Ç—å —Ç–µ, –∫–æ–º—É —Ç—ã –Ω—Ä–∞–≤
            mem = message.from_user.username

            bot.send_message(message.chat.id, f'–í–∑–∞–∏–º–Ω–∞—è —Å–∏–º–ø–∞—Ç–∏—è! \n –í–∞—à —á–∞—Ç: @{mem}')

        return
    elif(message.text == '–î–∏–∑–ª–∞–π–∫'):
        bot.send_message(message.chat.id, f"–ò—â–µ–º –¥–∞–ª—å—à–µ")
        Search(message)
    elif(message.text == '–ú–µ–Ω—é'):
        menu(message)


bot.infinity_polling()
